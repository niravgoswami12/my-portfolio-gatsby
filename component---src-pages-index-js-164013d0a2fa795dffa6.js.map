{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["StyledMain","styled","Main","IndexPage","location","data","useEffect","hash","id","substring","el","document","getElementById","scrollIntoView","focus","hero","edges","about","works","projects","contact","pageQuery"],"mappings":"4FAAA,kGAOMA,EAAaC,YAAOC,KAAV,wEAAGD,CAAH,gBAkCDE,UA9BG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAY3B,OAXAC,qBAAU,WACN,GAAIF,EAASG,KAAM,CACf,IAAMC,EAAKJ,EAASG,KAAKE,UAAU,GAC7BC,EAAKC,SAASC,eAAeJ,GAC/BE,IACAA,EAAGG,iBACHH,EAAGI,YAGZ,CAACV,EAASG,OAGT,kBAAC,IAAD,CAAQH,SAAUA,GACd,kBAACJ,EAAD,KACI,kBAAC,IAAD,CAAMK,KAAMA,EAAKU,KAAKC,QACtB,kBAAC,IAAD,CAAOX,KAAMA,EAAKY,MAAMD,QACxB,kBAAC,IAAD,CAAOX,KAAMA,EAAKa,MAAMF,QACxB,kBAAC,IAAD,CAAUX,KAAMA,EAAKc,SAASH,QAC9B,kBAAC,IAAD,CAASX,KAAMA,EAAKe,QAAQJ,WAarC,IAAMK,EAAS","file":"component---src-pages-index-js-164013d0a2fa795dffa6.js","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\n\nimport { Layout, Hero, About, Projects, Works, Contact, Main } from '@components';\n\nconst StyledMain = styled(Main)`\n    padding: 0;\n`;\n\nconst IndexPage = ({ location, data }) => {\n    useEffect(() => {\n        if (location.hash) {\n            const id = location.hash.substring(1);\n            const el = document.getElementById(id);\n            if (el) {\n                el.scrollIntoView();\n                el.focus();\n            }\n        }\n    }, [location.hash]);\n\n    return (\n        <Layout location={location}>\n            <StyledMain>\n                <Hero data={data.hero.edges} />\n                <About data={data.about.edges} />\n                <Works data={data.works.edges} />\n                <Projects data={data.projects.edges} />\n                <Contact data={data.contact.edges} />\n            </StyledMain>\n        </Layout>\n    );\n};\n\nIndexPage.propTypes = {\n    location: PropTypes.object.isRequired,\n    data: PropTypes.object.isRequired,\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n    {\n        hero: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/hero/\" } }) {\n            edges {\n                node {\n                    frontmatter {\n                        title\n                        name\n                        subtitle\n                        buttonText\n                    }\n                }\n            }\n        }\n        about: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/about/\" } }) {\n            edges {\n                node {\n                    frontmatter {\n                        title\n                        skills\n                        avatar {\n                            childImageSharp {\n                                fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#09162a\" }) {\n                                    ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                                }\n                            }\n                        }\n                    }\n                    html\n                }\n            }\n        }\n        works: allMarkdownRemark(\n            filter: { fileAbsolutePath: { regex: \"/works/\" } }\n            sort: { fields: [frontmatter___sort], order: ASC }\n        ) {\n            edges {\n                node {\n                    frontmatter {\n                        name\n                        role\n                        website\n                        duration\n                        responsibility\n                    }\n                    html\n                }\n            }\n        }\n        projects: allMarkdownRemark(\n            filter: { fileAbsolutePath: { regex: \"/projects/\" } }\n            sort: { fields: [frontmatter___sort], order: ASC }\n        ) {\n            edges {\n                node {\n                    frontmatter {\n                        overline\n                        title\n                        role\n                        images {\n                            image {\n                                childImageSharp {\n                                    fluid(\n                                        maxWidth: 700\n                                        quality: 90\n                                        traceSVG: { color: \"#09162a\" }\n                                    ) {\n                                        ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                                    }\n                                }\n                            }\n                            alt\n                        }\n                        tech\n                        external\n                    }\n                    html\n                }\n            }\n        }\n        contact: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/contact/\" } }) {\n            edges {\n                node {\n                    frontmatter {\n                        title\n                        emailText\n                    }\n                    html\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}